[main.c]
#include "main.hpp"

int main(void) {
	std::cout << "hello, world!" << std::endl;
}

[main.h]
#pragma once

#include <iostream>

[makefile]
# Extended template makefile

SRC_DIR  := ./src/main
HDR_DIR  := ./src/headers
RSC_DIR  := ./src/resources
LIBS_DIR := ./libs
OUT_DIR  := ./out
BIN_DIR  := $(OUT_DIR)/bin

ALL_DIRS := $(SRC_DIR) $(HDR_DIR) $(RSC_DIR) $(OUT_DIR) $(BIN_DIR)
TARGET   := $(BIN_DIR)/example
CC       := g++
CFLAGS   := -Wextra
LFLAGS   := 
INCLUDES := $(HDR_DIR)/
CPPFLAGS := 

SOURCES   := $(shell find $(SRC_DIR) -type f -name '*.cpp')
LIBS      := $(shell find $(LIBS_DIR) -type f -name '*.cpp')
OBJS      := $(patsubst $(SRC_DIR)/%.cpp,$(OUT_DIR)/%.o,$(SOURCES))
OBJS_LIBS := $(patsubst $(LIBS_DIR)/%.cpp,$(OUT_DIR)/%.o,$(LIBS))

all: $(TARGET) resources

$(TARGET): $(OBJS) $(OBJS_LIBS) | $(ALL_DIRS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(OBJS) $(OBJS_LIBS) -o $(TARGET) $(foreach inc, $(INCLUDES), -I $(inc)) $(LFLAGS)

$(OUT_DIR)/%.o:: $(SRC_DIR)/%.cpp
	mkdir -p $(@D)/ && $(CC) $(CFLAGS) $(CPPFLAGS) -c $^ -o $@ $(foreach inc, $(INCLUDES), -I $(inc))

$(OUT_DIR)/%.o:: $(LIBS_DIR)/%.cpp
	mkdir -p $(@D)/ && $(CC) $(CFLAGS) $(CPPFLAGS) -c $^ -o $@ $(foreach inc, $(INCLUDES), -I $(inc))

$(ALL_DIRS):
	@mkdir -p $@

resources:
	@cp -rf $(RSC_DIR)/ $(BIN_DIR)/

clean:
	rm -r $(OUT_DIR)/*
